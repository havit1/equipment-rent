{"version":3,"sources":["Components/SearchBar/SearchBar.jsx","Components/Navbar/Navbar.jsx","Actions/catalogue.js","Components/Catalogue/Catalogue.jsx","Components/HomePage/HomePage.jsx","Components/Common/cardGenerator.jsx","Components/ProductsList/ProductsList.jsx","Actions/products.js","Components/ErrorPage/ErrorPage.jsx","Components/Common/AddToShopCartBtn.jsx","Components/ProductPage/ProductPage.jsx","Actions/shoppingCart.js","Components/ShoppingCart/ShoppingCart.jsx","Components/SearchPage/SearchPage.jsx","Components/Common/input.jsx","Components/Common/select.jsx","Components/Common/form.jsx","Components/addNewItem/addNewItem.jsx","Components/rememberAllPage/test.jsx","App.js","serviceWorker.js","Reducers/shoppingCart.js","Reducers/catalogue.js","Reducers/products.js","Reducers/product.js","Reducers/search.js","Reducers/remember.js","Reducers/index.js","index.js"],"names":["Search","onSubmitSearch","e","preventDefault","props","searchedString","history","push","toLowerCase","onSubmit","this","className","onChange","onSearchChange","ref","input","trackInput","type","Component","connect","state","search","dispatch","payload","currentTarget","value","string","Navbar","to","getGenres","console","log","JSONGenres","Catalogue","onGetCategories","catalogue","map","categorie","key","id","name","toUpperCase","HomePage","cardGenerator","renderCard","product","withImage","withDescription","category","description","ProductsList","onGetProducts","match","params","products","productsList","filter","c","toString","getProducts","ErrorPage","AddToShopCartBtn","onAddToShoppingCart","text","onClick","ProductPage","onGetProductInfo","youtubeLink","src","title","frameBorder","allow","allowFullScreen","shoppingCartIds","find","productId","onRemoveFromShoppingCart","productInfo","ShoppingCart","onLoadItems","shoppingCartInfo","length","ids","itemsId","itemId","SearchPage","prevSearch","submittedSearchString","results","item","indexOf","location","pathname","split","pop","getSearchedProducts","componentDidMount","items","Input","label","error","rest","htmlFor","Select","options","option","Form","data","errors","validate","Joi","schema","abortEarly","details","path","message","validateProperty","obj","handleSubmit","setState","handleChange","errorMessage","disabled","addData","price","buttonInfo","class","required","number","Date","now","onGetGenres","renderInput","renderSelect","renderButton","onSubmitForm","rememberAll","onRenderCategories","categories","categoriesList","onShowCategories","remember","App","component","addNewItem","exact","withRouter","Boolean","window","hostname","initialState","searchString","action","findItems","combineReducers","index","splice","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ea040a4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./SearchBar.scss\";\r\n\r\nclass Search extends Component {\r\n  onSubmitSearch = e => {\r\n    e.preventDefault();\r\n\r\n    if (!this.props.searchedString) return;\r\n\r\n    this.props.onSubmitSearch(this.props.searchedString);\r\n    this.props.history.push(\r\n      `/search/${this.props.searchedString.toLowerCase()}`\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmitSearch} className=\"navbar__search-form\">\r\n        <input\r\n          className=\"navbar__search-form_input\"\r\n          onChange={this.props.onSearchChange}\r\n          ref={input => {\r\n            this.trackInput = input;\r\n          }}\r\n          type=\"text\"\r\n        />\r\n        <button className=\"navbar__search-form_button\">Search</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state.search,\r\n  dispatch => ({\r\n    onSearchChange: e => {\r\n      dispatch({\r\n        type: \"ON_UPDATE_SEARCH_STRING\",\r\n        payload: e.currentTarget.value ? e.currentTarget.value : null\r\n      });\r\n    },\r\n    onSubmitSearch: string => {\r\n      dispatch({\r\n        type: \"ON_SUBMIT_SEARCH\",\r\n        payload: string\r\n      });\r\n    }\r\n  })\r\n)(Search);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"../SearchBar/SearchBar\";\r\nimport \"./Navbar.scss\";\r\n\r\nconst Navbar = props => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Search history={props.history}></Search>\r\n\r\n      <div className=\"navbar__links\">\r\n        <Link className=\"navbar__links_link\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link className=\"navbar__links_link\" to=\"/shoppingcart\">\r\n          Shopping cart\r\n        </Link>\r\n        <Link className=\"navbar__links_link\" to=\"/add-item\">\r\n          Add new item\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import JSONGenres from \"../Components/genres.json\";\r\n\r\nexport const getGenres = () => dispatch => {\r\n  console.log(\"GOT GENRES\");\r\n  // const genres = JSON.stringify(JSONGenres);\r\n  dispatch({ type: \"GET_GENRES\", payload: JSONGenres });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getGenres } from \"../../Actions/catalogue\";\r\nimport \"./Catalogue.scss\";\r\n\r\nclass Catalogue extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCategories();\r\n  }\r\n\r\n  render() {\r\n    const { catalogue } = this.props;\r\n\r\n    return (\r\n      <ol className=\"catalogue\">\r\n        {catalogue.map(categorie => (\r\n          <li className=\"catalogue__element\" key={categorie.id}>\r\n            <Link to={`/products/${categorie.name}`}>\r\n              <span\r\n                className={`catalogue__element_image image-${categorie.name}`}\r\n              >\r\n                <h1>{categorie.name.toUpperCase()}</h1>\r\n              </span>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state,\r\n  dispatch => ({\r\n    onGetCategories: () => {\r\n      dispatch(getGenres());\r\n    }\r\n  })\r\n)(Catalogue);\r\n","import React, { Component } from \"react\";\r\nimport Catalogue from \"../Catalogue/Catalogue\";\r\nimport \"./HomePage.scss\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"homePage__wrapper\">\r\n        <Catalogue></Catalogue>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass cardGenerator extends Component {\r\n  renderCard = (\r\n    product,\r\n    withImage = false,\r\n    withDescription = false,\r\n    className\r\n  ) => {\r\n    return (\r\n      <Link\r\n        to={`/products/${product.category}/${product.id}`}\r\n        className={`${className}`}\r\n      >\r\n        {withImage ? <div></div> : null}\r\n        <h2>{product.name}</h2>\r\n        {withDescription ? <p>{product.description}</p> : null}\r\n      </Link>\r\n    );\r\n  };\r\n}\r\n\r\nexport default cardGenerator;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProducts } from \"../../Actions/products\";\r\nimport cardGenerator from \"../Common/cardGenerator\";\r\n\r\nimport \"./ProductsList.scss\";\r\n\r\nclass ProductsList extends cardGenerator {\r\n  componentDidMount() {\r\n    this.props.onGetProducts(this.props.match.params.name);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"product-list\">\r\n        <div className=\"product-list__wrapper\">\r\n          {this.props.products.map(product => (\r\n            <div className=\"item-card\">\r\n              {this.renderCard(product, true, true, \"product-list__element\")}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state,\r\n  dispatch => ({\r\n    onGetProducts: product => {\r\n      dispatch(getProducts(product));\r\n    }\r\n  })\r\n)(ProductsList);\r\n","import productsList from \"../Components/productsList.json\";\r\n\r\nexport const getProducts = product => dispatch => {\r\n  console.log(\"GETTING PRODUCTS\");\r\n\r\n  const products = productsList.filter(\r\n    c => c.category === product || c.name === toString(product)\r\n  );\r\n\r\n  console.log(\"product\", products);\r\n\r\n  dispatch({ type: \"GET_PRODUCTS\", payload: products });\r\n};\r\n\r\nexport const getProductInfo = product => dispatch => {\r\n  console.log(\"GETTING PRODUCT INFO\");\r\n\r\n  const productInfo = productsList.find(({ id }) => product === id);\r\n\r\n  console.log(\"product info\", productInfo);\r\n\r\n  dispatch({ type: \"GET_PRODUCT_INFO\", payload: productInfo });\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorPage extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Error 404</h1>;\r\n  }\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\n\r\nconst AddToShopCartBtn = ({ id, onAddToShoppingCart, className, text }) => {\r\n  return (\r\n    <button className={className} onClick={() => onAddToShoppingCart(id)}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default AddToShopCartBtn;\r\n","import React, { Component } from \"react\";\r\nimport { getProductInfo } from \"../../Actions/products\";\r\nimport {\r\n  addToShoppingCart,\r\n  removeFromShoppingCart\r\n} from \"../../Actions/shoppingCart\";\r\nimport { connect } from \"react-redux\";\r\nimport AddToShopCartBtn from \"../Common/AddToShopCartBtn.jsx\";\r\nimport \"./ProductPage.scss\";\r\n\r\nclass ProductPage extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetProductInfo(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { product, onAddToShoppingCart } = this.props;\r\n    return (\r\n      <div className=\"product-page\">\r\n        <h1 className=\"product-page__name\">{product.name}</h1>\r\n        <h2 className=\"product-page__id\">id: {product.id}</h2>\r\n        {product.description ? <p>{product.description}</p> : null}\r\n        {product.youtubeLink ? (\r\n          <iframe\r\n            className=\"product-page__iframe\"\r\n            src={product.youtubeLink}\r\n            title={product.youtubeLink}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n          ></iframe>\r\n        ) : null}\r\n        <div className=\"buttons-wrapper\">\r\n          <AddToShopCartBtn\r\n            className={\r\n              this.props.shoppingCartIds.find(\r\n                productId => this.props.product.id === productId\r\n              )\r\n                ? \"add-button-done\"\r\n                : \"add-button\"\r\n            }\r\n            text={\r\n              this.props.shoppingCartIds.find(\r\n                productId => this.props.product.id === productId\r\n              )\r\n                ? \"Already in shopping cart\"\r\n                : \"Add item to shopping cart\"\r\n            }\r\n            id={product.id}\r\n            onAddToShoppingCart={onAddToShoppingCart}\r\n          ></AddToShopCartBtn>\r\n          {this.props.shoppingCartIds.find(\r\n            productId => this.props.product.id === productId\r\n          ) ? (\r\n            <button\r\n              className=\"button-remove\"\r\n              onClick={() =>\r\n                this.props.onRemoveFromShoppingCart(this.props.product.id)\r\n              }\r\n            >\r\n              X\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state,\r\n  dispatch => ({\r\n    onGetProductInfo: id => {\r\n      dispatch(getProductInfo(id));\r\n    },\r\n    onAddToShoppingCart: id => {\r\n      dispatch(addToShoppingCart(id));\r\n    },\r\n    onRemoveFromShoppingCart: id => {\r\n      dispatch(removeFromShoppingCart(id));\r\n    }\r\n  })\r\n)(ProductPage);\r\n","import productsList from \"../Components/productsList.json\";\r\n\r\nexport const loadItems = itemsId => dispatch => {\r\n  const itemsInfo = itemsId\r\n    ? itemsId.map(itemId => productsList.find(({ id }) => id === itemId))\r\n    : null;\r\n\r\n  dispatch({ type: \"LOAD_PRODUCTS_INFO\", payload: itemsInfo });\r\n};\r\n\r\nexport const addToShoppingCart = productId => dispatch => {\r\n  dispatch({ type: \"ADD_TO_SHOPPING_CART\", payload: productId });\r\n};\r\n\r\nexport const removeFromShoppingCart = productId => dispatch => {\r\n  dispatch({ type: \"REMOVE_FROM_SHOPPING_CART\", payload: productId });\r\n};\r\n","import React from \"react\";\r\nimport { loadItems } from \"../../Actions/shoppingCart\";\r\nimport { connect } from \"react-redux\";\r\nimport cardGenerator from \"../Common/cardGenerator\";\r\nimport \"./ShoppingCart.scss\";\r\n\r\nclass ShoppingCart extends cardGenerator {\r\n  componentDidMount() {\r\n    this.props.onLoadItems(this.props.shoppingCartIds);\r\n  }\r\n\r\n  render() {\r\n    const { shoppingCartInfo } = this.props;\r\n    return (\r\n      <div className=\"shopping-cart\">\r\n        {shoppingCartInfo.length > 0 ? (\r\n          shoppingCartInfo.map(product => (\r\n            <div key={product.id} className=\"item-card\">\r\n              {this.renderCard(product, true, true, \"shopping-cart__element\")}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <h1>Nothing in you'r shopping cart at the moment...</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state,\r\n  dispatch => ({\r\n    onLoadItems: ids => {\r\n      dispatch(loadItems(ids));\r\n    }\r\n  })\r\n)(ShoppingCart);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport productsList from \"../productsList.json\";\r\nimport cardGenerator from \"../Common/cardGenerator\";\r\nimport \"./SearchPage.scss\";\r\n\r\nclass SearchPage extends cardGenerator {\r\n  componentDidMount() {\r\n    this.prevSearch = this.props.submittedSearchString;\r\n\r\n    let results = productsList.filter(\r\n      item =>\r\n        item.name.toUpperCase().indexOf(\r\n          (\r\n            this.props.submittedSearchString ||\r\n            this.props.location.pathname.split(\"/\").pop()\r\n          ) //Что-бы после перезагрузки страницы не показывало все товары\r\n            .toUpperCase()\r\n        ) > -1\r\n    );\r\n    this.props.getSearchedProducts(results);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.prevSearch !== this.props.submittedSearchString) {\r\n      this.componentDidMount(); //Делать новый поиск без потребности перезагружать страницу\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-page\">\r\n        {this.props.items.length === 0 ? (\r\n          <h1 className=\"search-page__no-items-error\">\r\n            '{this.props.submittedSearchString}' doesn't exist here. I'm\r\n            sorry...\r\n          </h1>\r\n        ) : (\r\n          this.props.items.map(product => (\r\n            <div key={product.key} className=\"item-card\">\r\n              {this.renderCard(product, true, true, \"search-page__element\")}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state.search,\r\n  dispatch => ({\r\n    getSearchedProducts: products => {\r\n      dispatch({ type: \"ON_LOAD_SEARCHED_ITEMS\", payload: products });\r\n    }\r\n  })\r\n)(SearchPage);\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option.id} value={option.name}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.onSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label, className) {\r\n    return (\r\n      <button disabled={this.validate()} className={className}>\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport items from \"../productsList.json\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"../Common/form\";\r\nimport { getGenres } from \"../../Actions/catalogue\";\r\nimport \"./addNewItem.scss\";\r\n\r\nclass addData extends Form {\r\n  state = {\r\n    data: {\r\n      name: \"\",\r\n      category: \"\",\r\n      id: \"\",\r\n      price: \"\",\r\n      description: \"\",\r\n      youtubeLink: \"\"\r\n    },\r\n    buttonInfo: { class: \"btn btn-primary\", text: \"Add new item\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\"),\r\n    category: Joi.string()\r\n      .required()\r\n      .label(\"Category\"),\r\n    price: Joi.number()\r\n      .required()\r\n      .label(\"Price\"),\r\n    description: Joi.label(\"Description\"),\r\n    id: Joi.label(\"Id\"),\r\n    youtubeLink: Joi.string().label(\"Youtube Link\")\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.onGetGenres();\r\n  }\r\n\r\n  onSubmit = () => {\r\n    const item = { ...this.state.data };\r\n    item.id = Date.now();\r\n    items.push(item);\r\n\r\n    const buttonInfo = { class: \"btn-success btn\", text: \"Added\" };\r\n    this.setState({ buttonInfo });\r\n    this.setState({\r\n      data: {\r\n        name: \"\",\r\n        category: \"\",\r\n        id: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n        youtubeLink: \"\"\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        {this.renderInput(\"name\", \"Name\")}\r\n        {this.renderInput(\"price\", \"Price\")}\r\n        {this.renderInput(\"youtubeLink\", \"Youtube Link\")}\r\n        {this.renderSelect(\"category\", \"Category\", this.props.catalogue)}\r\n        {this.renderInput(\"description\", \"Description\")}\r\n        {this.renderButton(\r\n          this.state.buttonInfo.text,\r\n          this.state.buttonInfo.class\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state,\r\n  dispatch => ({\r\n    onSubmitForm: () => {\r\n      dispatch({ type: \"ON_ADD_NEW_ITEM\" });\r\n    },\r\n    onGetGenres: () => {\r\n      dispatch(getGenres());\r\n    }\r\n  })\r\n)(addData);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport categoriesList from \"../genres.json\";\r\n\r\nclass rememberAll extends Component {\r\n  onRenderCategories = () => {\r\n    console.log(\"test\");\r\n    const categories =\r\n      this.props.catalogue.length > 0 ? this.state.catalogue : categoriesList;\r\n    this.props.onShowCategories(categories);\r\n    // return (\r\n    //   <div>\r\n    //     <ol>\r\n    //       {this.props.remember.map(categorie => (\r\n    //         <li>\r\n    //           <h1>categorie.name</h1>\r\n    //           <h2>categorie.id</h2>\r\n    //         </li>\r\n    //       ))}\r\n    //     </ol>\r\n    //   </div>\r\n    // );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          This page is created to help me remeber everything i forgot for the\r\n          past 2 weeks\r\n        </h1>\r\n        <button onClick={() => this.onRenderCategories()}>DOWNLOAD</button>\r\n        <ol>\r\n          {this.props.remember.map(categorie => (\r\n            <li>\r\n              <h1>categorie.name</h1>\r\n              <h2>categorie.id</h2>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => state,\r\n  dispatch => ({\r\n    onShowCategories: categories => {\r\n      dispatch({ type: \"ON_LOAD_CATEGORIES_REM\", payload: categories });\r\n    }\r\n  })\r\n)(rememberAll);\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport HomePage from \"./Components/HomePage/HomePage\";\r\nimport ProductsList from \"./Components/ProductsList/ProductsList\";\r\nimport ErrorPage from \"./Components/ErrorPage/ErrorPage\";\r\nimport ProductPage from \"./Components/ProductPage/ProductPage\";\r\nimport ShoppingCart from \"./Components/ShoppingCart/ShoppingCart\";\r\nimport SearchPage from \"./Components/SearchPage/SearchPage\";\r\nimport addNewItem from \"./Components/addNewItem/addNewItem\";\r\nimport \"./App.scss\";\r\nimport rememberAll from \"./Components/rememberAllPage/test\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"page-container\">\r\n        <Navbar history={this.props.history}></Navbar>\r\n\r\n        <div className=\"main-content\">\r\n          <Switch>\r\n            <Route path=\"/test\" component={rememberAll}></Route>\r\n            <Route path=\"/add-item\" component={addNewItem} />\r\n            <Route path=\"/shoppingcart\" component={ShoppingCart} />\r\n            <Route path=\"/search/:name\" component={SearchPage} />\r\n            <Route path=\"/products/:name/:id\" component={ProductPage}></Route>\r\n            <Route path=\"/products/:name\" component={ProductsList} />\r\n            <Route path=\"/\" exact component={HomePage}></Route>\r\n            <Route path=\"/404\" component={ErrorPage} />\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = [];\r\n\r\nexport default function shoppingCartIds(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"ADD_TO_SHOPPING_CART\":\r\n      return [...state, action.payload];\r\n    case \"REMOVE_FROM_SHOPPING_CART\":\r\n      const index = state.indexOf(action.payload);\r\n      if (index > -1) {\r\n        state.splice(index, 1);\r\n      }\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function shoppingCartInfo(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"LOAD_PRODUCTS_INFO\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = [];\r\n\r\nexport default function catalogue(state = initialState, action) {\r\n  if (action.type === \"GET_GENRES\") {\r\n    return action.payload;\r\n  } else return state;\r\n}\r\n","const initialState = [];\r\n\r\nexport default function products(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_PRODUCTS\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {};\r\n\r\nexport default function product(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"GET_PRODUCT_INFO\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  searchedString: \"\",\r\n  submittedSearchString: \"\",\r\n  items: []\r\n};\r\n\r\nconst searchString = (state = initialState.searchedString, action) => {\r\n  switch (action.type) {\r\n    case \"ON_UPDATE_SEARCH_STRING\":\r\n      return (initialState.searchedString = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst submittedSearchString = (\r\n  state = initialState.submittedSearchString,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"ON_SUBMIT_SEARCH\":\r\n      return (initialState.submittedSearchString = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst findItems = (state = initialState.items, action) => {\r\n  switch (action.type) {\r\n    case \"ON_LOAD_SEARCHED_ITEMS\":\r\n      return (initialState.items = action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function search(state = initialState, action) {\r\n  return {\r\n    searchedString: searchString(initialState.searchedString, action),\r\n    items: findItems(initialState.items, action),\r\n    submittedSearchString: submittedSearchString(\r\n      initialState.submittedSearchString,\r\n      action\r\n    )\r\n  };\r\n}\r\n","const initialState = [];\r\n\r\nexport default function remember(state = initialState, action) {\r\n  if (action.type === \"ON_LOAD_CATEGORIES_REM\") {\r\n    return action.payload;\r\n  } else return state;\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport shoppingCartIds, { shoppingCartInfo } from \"./shoppingCart\";\r\nimport catalogue from \"./catalogue\";\r\nimport products from \"./products\";\r\nimport product from \"./product\";\r\nimport search from \"./search\";\r\nimport remember from \"./remember\";\r\n\r\nexport default combineReducers({\r\n  shoppingCartIds,\r\n  catalogue,\r\n  products,\r\n  product,\r\n  shoppingCartInfo,\r\n  search,\r\n  remember\r\n});\r\n","import App from \"./App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducer from \"./Reducers/index\";\r\nimport \"./index.css\";\r\n\r\nlet store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter basename=\"/\">\r\n      <App></App>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}